{"ast":null,"code":"import * as types from '../actions/ActionTypes';\nconst initialState = {\n  number: 0\n};\nexport default function counter() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case types.INCREMENT:\n      return {\n        ...state,\n        number: state.number + 1\n      };\n    case types.DECREMENT:\n      return {\n        ...state,\n        number: state.number - 1\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["types","initialState","number","counter","state","arguments","length","undefined","action","type","INCREMENT","DECREMENT"],"sources":["C:/projects/bootReact/workspace/frontend/src/reducers/Counter.js"],"sourcesContent":["import * as types from '../actions/ActionTypes';\r\n\r\nconst initialState = {\r\n    number : 0\r\n};\r\n\r\nexport default function counter(state = initialState, action) {\r\n    \r\n    switch(action.type) {\r\n        case types.INCREMENT:\r\n            return {\r\n                ...state,\r\n                number : state.number + 1\r\n            };\r\n        case types.DECREMENT:\r\n            return {\r\n                ...state,\r\n                number : state.number - 1\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,wBAAwB;AAE/C,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAG;AACb,CAAC;AAED,eAAe,SAASC,OAAOA,CAAA,EAA+B;EAAA,IAA9BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAExD,QAAOC,MAAM,CAACC,IAAI;IACd,KAAKT,KAAK,CAACU,SAAS;MAChB,OAAO;QACH,GAAGN,KAAK;QACRF,MAAM,EAAGE,KAAK,CAACF,MAAM,GAAG;MAC5B,CAAC;IACL,KAAKF,KAAK,CAACW,SAAS;MAChB,OAAO;QACH,GAAGP,KAAK;QACRF,MAAM,EAAGE,KAAK,CAACF,MAAM,GAAG;MAC5B,CAAC;IACL;MACI,OAAOE,KAAK;EACpB;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}